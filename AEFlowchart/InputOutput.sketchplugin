// InputOutput (ctrl shift i)

#import 'AEFlowchart.js'

/*  call AEFlowchart main function with custom name and shape function  */
flowchart("InputOutput", inputOutputShape);

/*  draw input-output parallelogram shape for given label  */
function inputOutputShape(label)
{
  var parentGroup = [label parentGroup];
  var labelFrame = [label frame];

  // draw NSBezierPath
  var shapePath = [NSBezierPath bezierPath];
  // set the starting point of the shape.
  [shapePath moveToPoint:CGPointMake(40.0, 0.0)];
  // draw the lines
  [shapePath lineToPoint:CGPointMake(200.0, 0.0)];
  [shapePath lineToPoint:CGPointMake(160.0, 40.0)];
  [shapePath lineToPoint:CGPointMake(0.0, 40.0)];
  [shapePath closePath];

  // create BCBezierPath with NSBezierPath
  var bcPath = [[BCBezierPath alloc] init];
  [bcPath setPath: shapePath];

  // create custom shape
  var shape = [MSShapeGroup shapeWithBezierPath: bcPath];
  var shapeFrame = [shape frame];
  var shapeStyle = [shape style];

  // set frame
  [shapeFrame setWidth:[labelFrame width] + ([labelFrame height] * 2.0) + 32];
  [shapeFrame setHeight:[labelFrame height] + 20];
  [shapeFrame setMidX:[labelFrame midX]];
  [shapeFrame setMidY:[labelFrame midY]];

  // set gradient fill
  var fills = [shapeStyle fills];
  if([fills count] <= 0) [fills addNewStylePart];
  var shapeFill = [shapeStyle fill];
  [shapeFill setFillType: 1];
  var gradient = [shapeFill gradient];
  [gradient setColor: [MSColor colorWithHex:"87FC70" alpha:1] atIndex: 0];
  [gradient setColor: [MSColor colorWithHex:"0BD318" alpha:1] atIndex: 1];

  // add default inner shadow
  var innerShadows = [shapeStyle innerShadows];
  if([innerShadows count] <= 0) [innerShadows addNewStylePart];

  return shape;
}
